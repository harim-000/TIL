 ## PROBLEM
> You are given two strings word1 and word2.
>  Merge the strings by adding letters in alternating order, starting with word1.
> If a string is longer than the other, append the additional letters onto the end of the merged string.

 

### Example 1:

>Input: word1 = "abc", word2 = "pqr"
>Output: "apbqcr"
>Explanation: The merged string will be merged as so:

### Example 2:

> Input: word1 = "ab", word2 = "pqrs"
> Output: "apbqrs"
> Explanation: Notice that as word2 is longer, "rs" is appended to the end.

### Example 3:

> Input: word1 = "abcd", word2 = "pq"
> Output: "apbqcd"
> Explanation: Notice that as word1 is longer, "cd" is appended to the end.


**Constraints:**
> 1 <= word1.length, word2.length <= 100
> 
> word1 and word2 consist of lowercase English letters.

```java
class Solution {
    public String mergeAlternately(String word1, String word2) {
        StringBuilder result = new StringBuilder();
        int i = 0, j = 0;
        int len1 = word1.length(), len2 = word2.length();

        // APPEND WORD1 AND WORD2
        while (i < len1 || j < len2) {
            if (i < len1) result.append(word1.charAt(i++));
            if (j < len2) result.append(word2.charAt(j++));
        }

        return result.toString();
    }
}
```
